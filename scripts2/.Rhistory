oddL <- c()
evenL <- c()
i <- 0
oddL <- c()
evenL <- c()
for (i in 1:10) {
if (i %% 2 == 1) {
oddL <- c(oddL, i)
} else {
evenL <- c(evenL, i)
}
}; oddL; evenL
# Quiz
myVec <- c('watermelon', 'banana', 'apple', 'tomato', 'peach')
vege_list <- c('tomato', 'carrot', 'radish')
# Quiz
myVec <- c('watermelon', 'banana', 'apple', 'tomato', 'peach')
vege_list <- c('tomato', 'carrot', 'radish')
for (i in 1:length(myVec)) {
if (myVec[i] %in% vege_list) {
print(i)
}
}
if (myVec[i] %in% vege_list) {
print(sprintf('%s : %d', myVec[i], i))
}
for (i in 1:length(myVec)) {
if (myVec[i] %in% vege_list) {
print(sprintf('%s : %d', myVec[i], i))
}
}
# repeat
i <- 0
i <- i + 2
repeat {
i <- i + 2
print(i)
if (i >= 10) {
break
}
}
# Quiz
i <- 0
multi_7 <- c()
repeat {
i <- i + 1
if (i >= 100) {
break
} else if (i %% 7 == 0) {
multi_7 <- c(multi_7, i)
}
}; multi_7
# Create a matrix using for loop
myMat1 <- matrix(data = NA, nrow = 9, ncol = 9)
for (i in 1:9) {
val <- 1:9 * i
myMat1[,i] <- val
}
colnames(myMat1) <- paste('Multiple', 1:9, sep = '_')
myMat1
myMat2 <- c()
for (i in 1:9) {
val <- 1:9 * i
myMat2 <- rbind(myMat2, val)
}
rownames(myMat2) <- paste('Multiple', 1:9, sep="_")
myMat2
# Quiz
colnames(myMat2) <- paste('V', 1:9, sep = '')
myMat2
colnames(myMat2)
myMat2['V1']
myMat2['V1',]
myMat2[,'V1']
sum(myMat2[,'V1'])
# Quiz
colnames(myMat2) <- paste('V', 1:9, sep = '')
myMat2
for (i in colnames(myMat2)) {
print(sprintf('%s = %d'), i, sum(myMat2[,i]))
}
for (i in colnames(myMat2)) {
s <- sum(myMat2[,i])
print(sprintf('%s = %d'), i, s)
}
type(sum(myMat2[,"V1"]))
for (i in colnames(myMat2)) {
print(i)
print(type(i))
#s <- sum(myMat2[,i])
#print(sprintf('%s = %d'), i, s)
}
value <- 10
type(value)
value <- 10
type(value)
# Quiz
colnames(myMat2) <- paste('V', 1:9, sep = '')
myMat2
for (i in colnames(myMat2)) {
print(sprintf('%s = %d'), i,  sum(myMat2[,i]))
}
for (i in colnames(myMat2)) {
}
for (i in colnames(myMat2)) {
print(sprintf('%s = %d', i, sum(myMat2[,i])))
}
# apply : Returns a vector or array of list of values obtained by applying a function to margins of an array or matrix.
sum_vals <- apply(myMat2, 2, sum); sum_vals
paste('the sum of column ', seq_along(sum_vals), ': ', sum_vals, sep="")
# Quiz
mat <- c()
for (i in 1:3) {
mat <- rbind(mat, i * seq(2, 10, by=2))
}
mat
apply(mat, 1, mean)
### mean()
x <- c(0:10, 50)
mean(x)
mean(x, trim = 0.10)
y <- c(0:10, NA)
mean(y)
mean(y, na.rm = T)
# Day 04
# User-defined function
helloworld <- function() {
print('Hello, world')
}
helloworld()
echo <- function(whatever) {
print(whaztever)
}
echo('hi')
echo <- function(whatever) {
print(whatever)
}
echo('hi')
addsub <- function(x, y) {
a <- x + y
b <- x - y
return(c(a, b))
}
addsub(10, 7)
addsub2 <- function(x, y) c(x+y, x-y)
addsub2(10, 7)
welcome <- function(x, y = "hello") {
print(sprintf('%s, %s', y, x))
}
welcome('guys')
welcome_hj <- function(x = 'hj', y = 'hello') {
print(sprintf('%s, %s', y, x))
}
welcome_hj()
welcome_hj('guys')
welcome_hj('guys', 'hi')
welcome_hj2 <- function(x = 'hj', y) {
print(sprintf('%s, %s', y, x))
}
welcome_hj2('hi')
welcome_hj2('guys','hi')
sum_col(9,3)
# Quiz
sum_col <- function(x, y) {
myMat <- matrix(1:x, ncol = y)
return(apply(myMat, 2, sum))
}
sum_col(9,3)
# Quiz
sum_col <- function(x, y=1) {
#myMat <- matrix(1:x, ncol = y)
#return(apply(myMat, 2, sum))
if (y > ncol(x))  {
print(sprintf('%d is bigger than %s', y, ncol(x)))
} else {
return(sum(x[,y]))
}
}
myMat2 <- matrix(1:81, ncol = 9); myMat2
colnames(myMat2) <- paste('V',1:9,sep = "")
rownames(myMat2) <- paste('Multiple',1:9,sep="_")
myMat2
sum_col(myMat2,8)
myMat2 <- matrix(1:81, ncol = 9, byrow = T); myMat2
colnames(myMat2) <- paste('V',1:9,sep = "")
rownames(myMat2) <- paste('Multiple',1:9,sep="_")
myMat2
sum_col(myMat2,8)
sum_col(myMat2, 11)
sum_col(myMat2,8)
for (i in 1:9) {
val <- 1:9 * i
myMat2 <- rbind(myMat2, val)
}
myMat2 <- c()
for (i in 1:9) {
val <- 1:9 * i
myMat2 <- rbind(myMat2, val)
}
colnames(myMat2) <- paste('V',1:9,sep = "")
rownames(myMat2) <- paste('Multiple',1:9,sep="_")
myMat2
sum_col(myMat2, 11)
sum_col(myMat2,8)
a <- apply(myMat2, 2, function(x) x+1)
a
b <- apply(myMat2, 2, function(x) {(x+1)/(x-1)} )
b
# Write & read
## Set current R working directory
getwd()
setwd("/Users/knu_cgl1/Desktop/Study/repositories/BIC0711_practice1")
# Write & read
## Set current R working directory
getwd()
setwd("/Users/knu_cgl1/Desktop/Study/Obsidian/R_study/scripts2")
fileConn <- file('text1.txt', open="wt")
writeLines(c('line1', 'line2'), con = fileConn)
close(fileConn)
file.show('text1.txt')
# weiting lines - cat()
cat(c('line1', 'line2'), file = 'test3.txt', sep = "\n")
file.show('test3.txt')
# weiting lines - cat()
cat(c('line1', 'line2'), file = 'test3.txt', sep = "\n")
file.show('test3.txt')
# sink()
sink(file = 'test4.txt')
cat(c('line1', 'line2'), sep = '\n')
sink()
sink(file = 'test5.txt')
print('line1\n line2')
sink()
file.show('test5.txt')
sink(file = 'test5.txt')
print('line1\nline2')
sink()
file.show('test5.txt')
sum_vals <- apply(myMat2, 2, sum); sum_vals
sumVec <- paste('the sum of column', seq_along(sum_vals), ': ', sum_vals, sep = "")
sink(file = 'test_sink.txt')
cat(sumVec, sep = "\n-----------------------\n")
sink()
file.show('test_sink.txt')
# Writing a data frame (matrix)
myMat <- matrix(paste("v", 1:9, sep=""),nrow = 3)
write.table(myMat, file='test_mat1', sep='\t')
# Writing a data frame (matrix)
myMat <- matrix(paste("v", 1:9, sep=""),nrow = 3)
write.table(myMat, file='test_mat1', sep='\t')
file.show('test_mat1')
# Writing a data frame (matrix)
myMat <- matrix(paste("v", 1:9, sep=""),nrow = 3)
myMat
write.table(myMat, file='test_mat1', sep='\t')
file.show('test_mat1')
write.table(myMat, file = 'test_mat2.txt', sep = ',', quote = F)
file.show('test_mat2.txt')
write.table(myMat, file = 'test_mat3.txt', sep = '\t',row.names = F)
file.show('test_mat3.txt')
# Quiz
alp = c('a','b','c','d')
paste(seq_along(alp),1:5, sep = "")
file.show('test_sink.txt')
paste(seq_along(alp),alp,1:5, sep = "")
paste(alp,1:5, sep = "")
for (i %in% alp) {
for (i in alp) {
print(i)
}
for (i in alp) {
paste(i, 1:5, sep = "")
}
for (i in alp) {
print(paste(i, 1:5, sep = ""))
}
quiMat <- c()
for (i in alp) {
print(paste(i, 1:5, sep = ""))
for (i in alp) {
print(paste(i, 1:5, sep = ""))
}
# Quiz
alp = c('a','b','c','d')
quiMat <- c()
for (i in alp) {
print(paste(i, 1:5, sep = ""))
}
for (i in alp) {
print(paste(i, 1:5, sep = ""))
}
# Quiz
alp = c('a','b','c','d')
quiMat <- c()
for (i in alp) {
quiMat <- cbind(quiMat, paste(i, 1:5, sep = ""))
}; quiMat
print('a')
print('a')
=
print('a')
quiMat <- c()
for (i in alp) {
quiMat <- cbind(quiMat, paste(i, 1:5, sep=""))
}; quiMat
colnames(quiMat) <- paste('myCol', 1:4, sep = "_")
quiMat
write.table(quiMat, file = 'test_mat_quiz.csv', sep = '\t', row.names = F)
file.show('test_mat_quiz.csv')
typr(quiMat)
type(quiMat)
quiMat <- matrix(quiMat)
type()write.table(quiMat, file = 'test_mat_quiz.csv', sep = '\t', row.names = F)
quiMat <- matrix(quiMat); quiMat
quiMat <- matrix(quiMat, ncol = 4); quiMat
quiMat <- matrix(quiMat, ncol = 4); quiMat
colnames(quiMat) <- paste('myCol', 1:4, sep = "_")
type()write.table(quiMat, file = 'test_mat_quiz.csv', sep = '\t', row.names = F)
colnames(quiMat) <- paste('myCol', 1:4, sep = "_")
write.table(quiMat, file = 'test_mat_quiz.csv', sep = '\t', row.names = F)
file.show('test_mat_quiz.csv')
# Quiz
alp = c('a','b','c','d')
quiMat <- c()
for (i in alp) {
quiMat <- cbind(quiMat, paste(i, 1:5, sep=""))
}; quiMat
colnames(quiMat) <- paste('myCol', 1:4, sep = "_")
write.table(quiMat, file = 'test_mat_quiz.csv', sep = ',', row.names = F)
file.show('test_mat_quiz.csv')
# Read lines - readLines()
fileConn <- file("test_mat2.txt",open = "rt")
readLines(fileConn)
close(fileConn)
readLines('test_mat1')
# Writing a data frame (matrix)
myMat <- matrix(paste("v", 1:9, sep=""),nrow = 3)
myMat
write.table(myMat, file='test_mat1.txt', sep='\t')
file.show('test_mat1.txt')
# Read lines - readLines()
fileConn <- file("test_mat2.txt",open = "rt")
readLines(fileConn)
close(fileConn)
readLines('test_mat1')
readLines('test_mat1.txt')
readLines('test_mat1.txt', n=1)
# read.table()
myDf <- read.table('test_mat3.txt', sep = '\t')
myDf
myDf <- read.table('test_mat3.txt', sep = '\t', header = T); myDf
myDf <- read.table('test_mat2.txt'); myDf
myDf <- read.table('test_mat2.txt', sep = ","); myDf
fileConn <- file('test_mat4.txt', open = "wt")
writeLines(c('line1', 'line2','#end of line'), con = fileConn)
close(fileConn)
write.table(myMat, file = 'test_mat4.txt', sep = '\t', row.names = F, col.names = F, append = T)
file.show('test_mat4.txt')
myDf <- read.table('test_mat4.txt'); myDf
myDf <- read.table('test_mat4.txt', header = F, sep = "\t", skip = 3); myDf
myDf <- read.table('test_mat4.txt', header = F, sep = "\t", skip = 2, comment.char = "#"); myDf
# Quiz
col1 <- c(paste(c('a','b','c','d'), 1, sep = "")); col1
# Quiz
col1 <- c(paste(c('a','b','c','d','e','f'), 1, sep = "")); col1
mat <- c()
for (i in 5) {
mat <- rbind(mat,c(i:i+5))
}; mat
mat <- c()
mat <- rbind(mat,c(i:i+5))
for (i in 5) {
mat <- rbind(mat,c(i:i+5))
}; mat
mat <- c()
for (i in 5) {
c <- i:i+5
mat <- rbind(mat,c)
}; mat
mat <- c()
for (i in 1:5) {
c <- i:i+5
mat <- rbind(mat,c)
}; mat
mat <- c()
for (i in 1:5) {
c <- 1:6 * i
mat <- rbind(mat,c)
}; mat
col2 <- c(); col2
Mat <- rbind(col1, col2, mat)
Mat
# Quiz
col1 <- c(paste(c('a','b','c','d','e','f'), 1, sep = "")); col1
col2 <- c(); col2
mat <- c()matcol2 <- c()
for (i in 1:5) {
c <- 1:6 * i
mat <- rbind(mat,c)
}; mat
# Quiz
col1 <- c(paste(c('a','b','c','d','e','f'), 1, sep = "")); col1
col2 <- c(); col2
mat <- c()
for (i in 1:5) {
c <- 1:6 * i
mat <- rbind(mat,c)
}; mat
mat <- c()
for (i in 1:5) {
c <- i:5+i
mat <- rbind(mat,c)
}; mat
mat <- c()
for (i in 1:5) {
c <- i:(i+5)
mat <- rbind(mat,c)
}; mat
Mat <- cbind(col1, col2, mat)
Mat
# Quiz
col1 <- c(paste(c('a','b','c','d','e','f'), 1, sep = "")); col1
col2 <- character(6)
mat <- c()
for (i in 1:5) {
c <- i:(i+5)
mat <- rbind(mat,c)
}; mat
Mat <- cbind(col1, col2, mat)
Mat
colnames(mat) <- paste('col',3:7,sep = "")
# Quiz
col1 <- c(paste(c('a','b','c','d','e','f'), 1, sep = "")); col1
col2 <- character(6)
mat <- c()
for (i in 1:5) {
c <- i:(i+5)
mat <- rbind(mat,c)
}; mat
colnames(mat) <- paste('col',3:7,sep = "")
mat <- c()
for (i in 1:4) {
c <- i:(i+5)
mat <- rbind(mat,c)
}; mat
colnames(mat) <- paste('col',3:7,sep = "")
mat <- c()
for (i in 1:5) {
c <- i:(i+4)
mat <- rbind(mat,c)
}; mat
mat <- c()
for (i in 1:6) {
c <- i:(i+4)
mat <- rbind(mat,c)
}; mat
colnames(mat) <- paste('col',3:7,sep = "")
Mat <- cbind(col1, col2, mat)
Mat
rownames(Mat) <- c('a','b','c','d','e','f')
Mat
row.names() <- 'rowname'
row.names(Mat) <- 'rowname'
# Quiz
rowname <- c('a','b','c','d','e','f')
col1 <- c(paste(rowname, 1, sep = "")); col1
col2 <- character(6)
mat <- c()
for (i in 1:6) {
c <- i:(i+4)
mat <- rbind(mat,c)
}; mat
Mat <- cbind(rowname, col1, col2, mat)
Mat
# Quiz
rowname <- c('a','b','c','d','e','f')
col1 <- c(paste(rowname, 1, sep = "")); col1
col2 <- character(6)
mat <- c()
for (i in 1:6) {
c <- i:(i+4)
mat <- rbind(mat,c)
}; mat
colnames(mat) <- paste('col',3:7,sep = "")
Mat <- cbind(rowname, col1, col2, mat)
Mat
write.table(Mat, file = 'test_mat_quiz2.txt', sep = '\t', row.names = F)
file.show('test_mat_quiz2.txt')
myDf <- read.table('test_mat_quiz2.txt', header = T, row.names = 'rowname'); myDf
myDf[3,]
myDf[,3]
myDf[,3:5]
myDf[,3:]
myDf[,3:-1]
myDf[,3:7]
apply(myDf[,3:7], 2, mean)
myDf <- read.table('test_mat_quiz2.txt',sep='\t' header = T, row.names = 'rowname'); myDf
# Quiz
rowname <- c('a','b','c','d','e','f')
col1 <- c(paste(rowname, 1, sep = "")); col1
col2 <- character(6)
mat <- c()
for (i in 1:6) {
c <- i:(i+4)
mat <- rbind(mat,c)
}; mat
colnames(mat) <- paste('col',3:7,sep = "")
Mat <- cbind(rowname, col1, col2, mat)
write.table(Mat, file = 'test_mat_quiz2.txt', sep = '\t', row.names = F)
file.show('test_mat_quiz2.txt')
myDf <- read.table('test_mat_quiz2.txt',sep='\t', header = T, row.names = 'rowname'); myDf
apply(myDf[,3:7], 2, mean)
